---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import ExtLink from "@components/ExtLink.astro";
import IconLink from "@components/IconLink.astro";
import { BsGithub, BsLink45Deg } from "react-icons/bs";
export async function getStaticPaths() {
    const renameEntries = await getCollection("projects");
    return renameEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry }
    }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.name}>
    <div class="grid">
        <hgroup>
            <h1>{entry.data.name}</h1>
            <h2>
                {entry.data.timespan.from}{
                    entry.data.timespan.to && <> - {entry.data.timespan.to}</>
                } |
                {entry.data.tags.join(" â€¢ ")}
            </h2>
        </hgroup>
        <div class="links">
            {
                entry.data.links.github && (
                    <span>
                        <IconLink
                            label="GitHub"
                            placement="left"
                            href={`https://github.com/${entry.data.links.github}`}
                        >
                            <BsGithub size="25px" />
                        </IconLink>
                    </span>
                )
            }
            {
                entry.data.links.other &&
                    Object.keys(entry.data.links.other).map((k) => (
                        <span>
                            <IconLink href={entry.data.links.other[k]} placement="left" label={k}>
                                <BsLink45Deg size="25px" />
                            </IconLink>
                        </span>
                    ))
            }
        </div>
    </div>
    <Content />
</Layout>

<style>
    .grid > hgroup {
        margin-bottom: 0;
    }

    .grid {
        background-color: var(--card-sectionning-background-color);
        padding: var(--spacing);
        border-radius: 5px;
        margin-bottom: calc(var(--spacing) * 5) !important;
    }

    .links {
        display: flex;
        align-content: center;
        justify-content: end;
        gap: var(--spacing);
    }

    .links > span {
        display: flex;
        align-items: center;
    }
</style>
